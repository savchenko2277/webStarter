@use "functions.scss" as *;
@use "variables.scss" as *;
@use "mixins.scss" as *;


.btn {
    font-family: "HT", sans-serif;
    padding: 14px 20px;
    transition: var(--transition);
    border-radius: 12px;
    background: var(--main-blue);
    color: var(--white);
    cursor: pointer;

    svg {
        width: 18px; height: 18px;
        transition: var(--transition);
    }

    &:hover {
        background: var(--dark-blue);
    }

    span {
        color: var(--white);
        transition: var(--transition);
        width: 100%;
        display: block;
        text-align: center;
    }

    &_green {
        background: rgba(86, 199, 69, 1);
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: 16px;

        span {
            color: var(--white);
        }

        svg {
            fill: var(--white);
        }
    }

    &_white {
        background: var(--white);
        
        span {
            color: var(--main-black);
        }

        &:hover {
            svg {
                fill: var(--white);
            }
            
            span {
                color: var(--white);
            }
        }
    }

    &_download {
        padding: 0;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        width: fit-content;

        span {
            padding-left: 20px;
            padding-right: 14px;
        }

        svg {
            width: 46px; height: 46px;
            padding: 14px;
            transition: var(--transition);
            border-left: 1px solid #303030;
        }

        &:hover {
            svg {
                border-left: 1px solid #FFFFFF66;
            }
        }
    }

    &_black {
        background: var(--main-black);

        svg { stroke: var(--white); }
    }
}

.title {
    text-transform: uppercase;
    font-weight: 500;
    font-family: "TT", sans-serif;

    span { 
        color: var(--main-blue); 
    }
}

.title-32 {
    font-size: fluid(32px, 24px);
}

.title-24 {
    font-size: fluid(24px, 20px);
}

.title-44 {
    font-size: fluid(44px, 30px);
}

.swiper-pagination-line {
    display: flex;
    flex-direction: row;
    gap: 16px;

    .swiper-pagination-bullet {
        position: relative;
        display: block;
        background: var(--white);
        width: 5px; height: 5px;
        overflow: hidden;
        opacity: 0.4;
        border-radius: 15px;
        flex: 0 0 auto;
        cursor: pointer;
        transition: var(--transition);
        width: 4px; height: 4px;

        &::before {
            content: '';
            display: block;
            position: absolute;
            background-color: var(--main-blue);
            inset: 0;
            height: 100%;
            width: 0%;
        }

        &.active &::before {
            width: 100%;
        }

        &.active {
            width: 80px;
            opacity: 1;
        }
          
        &.active::before {            
            animation-name: width;
            animation-duration: var(--duration, 5s);
            animation-timing-function: linear;
        }
    }
}

.input-checkbox {
    appearance: none;
    position: relative;
    width: 20px; height: 20px;
    border: 1px solid rgba(217, 217, 217, 1);
    border-radius: 4px;
    background: var(--white);
    cursor: pointer;
    transition: var(--transition);

    &::after {
        content: '';
        display: block;
        position: absolute;
        top: 50%; left: 50%;
        transform: translate(-50%, -50%) scale(0);
        width: 12px; height: 12px;
        background: url('./img/check.svg');
        background-repeat: no-repeat;
        background-size: cover;
    }

    &:checked {
        background: var(--main-blue);
        border: 1px solid var(--main-blue);
        &::after {
            transform: translate(-50%, -50%) scale(1);
        }
    }
}

.quiz-checkbox {
    width: 20px; height: 20px;
    appearance: none;
    cursor: pointer;
    position: relative;
    border-radius: 4px;
    border: 1px solid rgba(217, 217, 217, 1);
    background: var(--white);
    transition: var(--transition);

    &::after {
        content: '';
        position: absolute;
        inset: 0;
        top: 50%; left: 50%;
        transform: translate(-50%, -50%);
        width: 14px; height: 14px;
        background: var(--main-blue);
        opacity: 0;
        border-radius: 3px;
        transition: var(--transition);
    }

    &:checked {
        border: 1px solid var(--main-blue);
        &::after {
            opacity: 1;
        }
    }
}

.icon-border {
    @include flex-center;
	padding: 2px;
	border-radius: 100%;
	border: 1px solid var(--main-blue);
	transition: var(--transition);
    width: fit-content;
    
    svg {
        width: 42px; height: 42px;
        padding: 12px;
        fill: var(--white);
        border-radius: 100%;
        background: var(--main-blue);
        transition: var(--transition);
    }
}

.more {
    $self: &;
    @extend %reset-button;
    transition: background-color 0.3s, color 0.3s;
    background-color: transparent;
    border: 1px solid var(--blue);
    border-radius: 100px;
    color: var(--blue);
    width: fit-content;
    padding: 0 40px;
    height: 55px;
    display: flex;
    text-align: center;
    align-items: center;
    justify-content: center;
    
    &_hidden {
        background-color: var(--blue);
        color: #fff;
        
        span {
            &:nth-child(1) {
                display: block !important;
            }
            
            &:nth-child(2) {
                display: none !important;
            }
        }
    }
  
    span {
        animation: fadeIn 0.3s;
    
        &:nth-child(1) {
            display: none;
        }
        
        &:nth-child(2) {
            display: block;
        }
    }
}

@keyframes width {
    from { width: 0; }
    to { width: 100%; }
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes showFromLeft {
	0% {
		transform: translateX(-100%);
		opacity: 0;
		pointer-events: none;
	}
	100% {
		transform: translateX(0%);
		opacity: 1;
		pointer-events: all;
	}
}

@keyframes hideFromLeft {
	from {
	  	transform: translateX(0);
	  	opacity: 1;
		pointer-events: all;
	}
	98% {
	  opacity: 1;
	  transform: translateX(100%);
	}
	99% {
	  transform: translateX(100%);
	  opacity: 0;
	}
	100% {
	  transform: translateX(-100%);
	  opacity: 0;
	  pointer-events: none;
	}
}

@keyframes showModal {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

.hidden {
    display: none !important;
}

.input-error {
    background: rgb(199, 199, 199) !important;
    color: #000000 !important;
}